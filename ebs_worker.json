{
    "Outputs": {
        "AWSEBWorkerQueueURL": {
            "Value": {
                "Ref": "AWSEBWorkerQueueURL"
            },
            "Description": "URL of the worker queue"
        }
    },
    "Parameters": {
        "AWSEBAgentId": {
            "Default": "",
            "Type": "String"
        },
        "AWSEBWorkerQueueURL": {
            "Default": "",
            "Description": "The URL to the worker SQS queue",
            "Type": "String"
        },
        "AllowUrlFopen": {
            "Default": "On",
            "Description": "Specifies whether the PHP's file functions are allowed to retrieve data from remote locations, such as websites or FTP servers. (This value is written to the php.ini file.)",
            "Type": "String"
        },
        "AWSEBHttpPath": {
            "Default": "\/",
            "Description": "The relative path to the app to which we post",
            "Type": "String"
        },
        "MemoryLimit": {
            "Default": "256M",
            "Description": "Specifies the amount of memory allocated to the PHP environment. (This value is written to the php.ini file.)",
            "Type": "String"
        },
        "DocumentRoot": {
            "Default": "",
            "Description": "Enables you to specify the child directory of your project that is treated as the public-facing web root. If your root document is stored in your project directory, leave this set to \"\/\". If your root document is inside a child directory (e.g., <project>\/public), set this value to match the child directory. Values should begin with a \"\/\" character, and may NOT begin with a \".\" character.",
            "Type": "String"
        },
        "InstancePort": {
            "Default": "80",
            "Description": "Listen Port",
            "Type": "String"
        },
        "AWSEBEnvironmentId": {
            "Type": "String"
        },
        "AWSEBEnvironmentBucket": {
            "Type": "String"
        },
        "AWSEBMimeType": {
            "Default": "application\/json",
            "Description": "The mime type of the message being sent",
            "Type": "String"
        },
        "AWSEBConnectTimeout": {
            "Default": 5,
            "Description": "The timeout in seconds for new connections to the application",
            "Type": "Number"
        },
        "AWSEBRetentionPeriod": {
            "Default": 345600,
            "Description": "The amount of time in seconds a message is valid and will be actively processed",
            "Type": "Number"
        },
        "LogPublicationControl": {
            "Default": "false",
            "Description": "If true customer service logs will be published to S3.",
            "AllowedValues": ["true", "false"],
            "Type": "String",
            "ConstraintDescription": "must be Boolean."
        },
        "AWSEBVisibilityTimeout": {
            "Default": 30,
            "Description": "The amount of time in seconds an incoming message is locked for processing",
            "Type": "Number"
        },
        "AWSEBEnvironmentName": {
            "Type": "String"
        },
        "InstanceType": {
            "Default": "t1.micro",
            "Description": "WebServer EC2 instance type",
            "AllowedValues": ["t1.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "c1.medium", "c1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.xlarge", "m3.2xlarge", "cc2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "g2.2xlarge"],
            "Type": "String",
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "AWSEBMaxRetries": {
            "Default": 10,
            "Description": "The maximum number of retries after which the message is discarded",
            "Type": "Number"
        },
        "AWSEBReferrerId": {
            "Default": "",
            "Type": "String"
        },
        "AWSEBHealthCheck": {
            "Default": "",
            "Description": "The serialized value of the application healthcheck",
            "Type": "String"
        },
        "AWSEBHttpConnections": {
            "Default": 50,
            "Description": "The maximum number of concurrent connections to the applications",
            "Type": "Number"
        },
        "DisplayErrors": {
            "Default": "Off",
            "Description": "Specifies whether error messages should be part of the output. (This value is written to the php.ini file.)",
            "Type": "String"
        },
        "MaxExecutionTime": {
            "Default": 60,
            "Description": "Sets the maximum time, in seconds, a script is allowed to run before it is terminated by the environment. This helps prevent poorly written scripts from tying up the server.",
            "Type": "Number"
        },
        "ZlibOutputCompression": {
            "Default": "Off",
            "Description": "Specifies whether PHP should use compression for output. (This value is written to the php.ini file.)",
            "Type": "String"
        },
        "AppSource": {
            "Default": "https:\/\/s3-us-west-2.amazonaws.com\/elasticbeanstalk-samples-us-west-2\/php-newsample-app.zip",
            "Description": "The url of the application source.",
            "Type": "String"
        },
        "ComposerOptions": {
            "Default": "",
            "Description": "Sets custom options to use when installing dependencies using Composer through composer.phar install",
            "Type": "String"
        },
        "AWSEBInactivityTimeout": {
            "Default": 180,
            "Description": "The timeout in seconds for existing connections to the application",
            "Type": "Number"
        },
        "EnvironmentVariables": {
            "Default": "AWS_ACCESS_KEY_ID=,AWS_SECRET_KEY=,PARAM1=,PARAM2=,PARAM3=,PARAM4=,PARAM5=",
            "Description": "Program environment variables.",
            "Type": "CommaDelimitedList"
        }
    },
    "Description": "AWS Elastic Beanstalk environment (Name: 'eventConsumerEnv'  Id: 'e-6mm36vtvqz')",
    "Mappings": {
        "EnvironmentInfoTasks": {
            "systemtail": {
                "AutoClean": "true",
                "CommandName": "CMD-SystemTailLogs",
                "LocationPrefix": "resources\/environments\/logs\/systemtail\/"
            },
            "bundle": {
                "CommandName": "CMD-BundleLogs",
                "LocationPrefix": "resources\/environments\/logs\/bundle\/"
            },
            "publish": {
                "LocationPrefix": "resources\/environments\/logs\/publish\/"
            },
            "tail": {
                "AutoClean": "true",
                "CommandName": "CMD-TailLogs",
                "LocationPrefix": "resources\/environments\/logs\/tail\/"
            }
        },
        "AWSEBOptions": {
            "options": {
                "FastVersionDeployment": "true",
                "nodeploymentOnStartup": "true",
                "EnvironmentType": "SingleInstance",
                "ebpatchscripturl": ["https:\/\/s3.amazonaws.com\/elasticbeanstalk-env-resources-us-east-1\/eb_patching_resources\/patch_instance.py"],
                "HaltStartupCommandsOnFailure": "true",
                "ebrpm": "https:\/\/s3-us-west-2.amazonaws.com\/elasticbeanstalk-env-resources-us-west-2\/stalks\/eb_hooks_base_2.1-3\/lib\/aws-elasticbeanstalk-tools-1.10-1.noarch.rpm",
                "cfnrpm": "https:\/\/s3-us-west-2.amazonaws.com\/elasticbeanstalk-env-resources-us-west-2\/stalks\/eb_hooks_base_2.1-3\/lib\/python-certifi-0.0.8-2.3.amzn1.noarch.rpm https:\/\/s3-us-west-2.amazonaws.com\/elasticbeanstalk-env-resources-us-west-2\/stalks\/eb_hooks_base_2.1-3\/lib\/aws-cfn-bootstrap-1.3-16.amzn1.noarch.rpm",
                "EnvironmentTier": [
                    {
                        "Name": "Worker",
                        "Type": "SQS\/HTTP",
                        "Version": "1.0"
                    }
                ],
                "DefaultSSHPort": "22",
                "UserDataScript": "https:\/\/s3-us-west-2.amazonaws.com\/elasticbeanstalk-env-resources-us-west-2\/stalks\/eb_hooks_base_2.1-3\/lib\/UserDataScript.sh",
                "requests": "https:\/\/s3-us-west-2.amazonaws.com\/elasticbeanstalk-env-resources-us-west-2\/stalks\/eb_hooks_base_2.1-3\/lib\/requests-0.13.5.tar.gz#md5=805fd122b4cfd224e15ff2f5288c5ba0",
                "DefaultsScript": "\/opt\/elasticbeanstalk\/support\/cfncontext.rb",
                "LeaderTestScript": "\/opt\/elasticbeanstalk\/bin\/leader-test.sh",
                "LaunchType": "Migration",
                "downloadSourceBundleScriptLocation": ["https:\/\/elasticbeanstalk-env-resources-us-west-2.s3.amazonaws.com\/eb_patching_resources\/download_source_bundle.py"],
                "EmbeddedConfigsetsEnabled": "true"
            }
        },
        "AWSEBAWSRegionArch2AMI": {
            "sa-east-1": {
                "64": "ami-9f6ec982"
            },
            "ap-northeast-1": {
                "64c3": "ami-b1fe9bb0",
                "64": "ami-3561fe34",
                "64cc": "ami-0961fe08"
            },
            "eu-west-1": {
                "64c3": "ami-c7ec0eb0",
                "64cg": "ami-2c9f785b",
                "64": "ami-149f7863",
                "64cc": "ami-209f7857",
                "64g2": "ami-ab836edc"
            },
            "us-east-1": {
                "64c3": "ami-83e4bcea",
                "64cg": "ami-7f792c16",
                "64": "ami-35792c5c",
                "64cc": "ami-69792c00",
                "64g2": "ami-1b597c72"
            },
            "us-west-1": {
                "64c3": "ami-a43909e1",
                "64": "ami-687b4f2d",
                "64g2": "ami-2cbe8869"
            },
            "us-west-2": {
                "64c3": "ami-be1c848e",
                "64": "ami-d03ea1e0",
                "64cc": "ami-e43ea1d4",
                "64g2": "ami-9a9f04aa"
            },
            "ap-southeast-2": {
                "64c3": "ami-717be74b",
                "64": "ami-a148d59b"
            },
            "ap-southeast-1": {
                "64c3": "ami-4296c310",
                "64": "ami-14f2b946"
            }
        },
        "AWSEBAWSInstanceType2Arch": {
            "m2.xlarge": {
                "Arch": "64"
            },
            "cg1.4xlarge": {
                "Arch": "64cg"
            },
            "hs1.8xlarge": {
                "Arch": "64"
            },
            "m1.large": {
                "Arch": "64"
            },
            "m1.xlarge": {
                "Arch": "64"
            },
            "m2.2xlarge": {
                "Arch": "64"
            },
            "c3.4xlarge": {
                "Arch": "64c3"
            },
            "c3.8xlarge": {
                "Arch": "64c3"
            },
            "m1.medium": {
                "Arch": "64"
            },
            "m3.xlarge": {
                "Arch": "64"
            },
            "g2.2xlarge": {
                "Arch": "64g2"
            },
            "cr1.8xlarge": {
                "Arch": "64cc"
            },
            "m2.4xlarge": {
                "Arch": "64"
            },
            "cc2.8xlarge": {
                "Arch": "64cc"
            },
            "c3.large": {
                "Arch": "64c3"
            },
            "c3.xlarge": {
                "Arch": "64c3"
            },
            "c3.2xlarge": {
                "Arch": "64c3"
            },
            "m3.2xlarge": {
                "Arch": "64"
            },
            "m1.small": {
                "Arch": "64"
            },
            "t1.micro": {
                "Arch": "64"
            },
            "cc1.4xlarge": {
                "Arch": "64cc"
            },
            "c1.medium": {
                "Arch": "64"
            },
            "hi1.4xlarge": {
                "Arch": "64"
            },
            "c1.xlarge": {
                "Arch": "64"
            }
        }
    },
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
        "AWSEBAutoScalingLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "IamInstanceProfile": "EventListener",
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSEBAWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSEBAWSInstanceType2Arch",
                                {
                                    "Ref": "InstanceType"
                                },
                                "Arch"
                            ]
                        }]
                },
                "InstanceMonitoring": false,
                "SecurityGroups": [
                    {
                        "Ref": "AWSEBSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": ["", ["Content-Type: multipart\/mixed; boundary=\"===============5189065377222898407==\"", "\n", "MIME-Version: 1.0", "\n", "", "\n", "--===============5189065377222898407==", "\n", "Content-Type: text\/cloud-config; charset=\"us-ascii\"", "\n", "MIME-Version: 1.0", "\n", "Content-Transfer-Encoding: 7bit", "\n", "Content-Disposition: attachment; filename=\"cloud-config.txt\"", "\n", "", "\n", "#cloud-config", "\n", "repo_upgrade: none", "\n", "repo_releasever: 2013.09", "\n", "", "\n", "--===============5189065377222898407==", "\n", "Content-Type: text\/x-shellscript; charset=\"us-ascii\"", "\n", "MIME-Version: 1.0", "\n", "Content-Transfer-Encoding: 7bit", "\n", "Content-Disposition: attachment; filename=\"user-data.txt\"", "\n\n", "#!\/bin\/bash", "\n", "exec > >(tee -a \/var\/log\/eb-cfn-init.log|logger -t [eb-cfn-init] -s 2>\/dev\/console) 2>&1", "\n", "set -x", "\n", "\n\n", "function sleep_delay ", "\n", "{", "\n", "  if (( $SLEEP_TIME < $SLEEP_TIME_MAX )); then ", "\n", "    echo Sleeping $SLEEP_TIME", "\n", "    sleep $SLEEP_TIME  ", "\n", "    SLEEP_TIME=$(($SLEEP_TIME * 2)) ", "\n", "  else ", "\n", "    echo Sleeping $SLEEP_TIME_MAX  ", "\n", "    sleep $SLEEP_TIME_MAX  ", "\n", "  fi", "\n", "}", "\n\n", "# Executing bootstrap script", "\n", "SLEEP_TIME=10", "\n", "SLEEP_TIME_MAX=3600", "\n", "while true; do ", "\n", "  curl ", {
                            "Fn::FindInMap": ["AWSEBOptions", "options", "UserDataScript"]
                        }, " > \/tmp\/ebbootstrap.sh ", "\n", "  RESULT=$?", "\n", "  if [[ \"$RESULT\" -ne 0 ]]; then ", "\n", "    sleep_delay ", "\n", "  else", "\n", "    \/bin\/bash \/tmp\/ebbootstrap.sh ", "    '", {
                            "Fn::FindInMap": ["AWSEBOptions", "options", "requests"]
                        }, "'", "    '", {
                            "Fn::FindInMap": ["AWSEBOptions", "options", "cfnrpm"]
                        }, "'", "    '", {
                            "Ref": "AWSEBInstanceLaunchWaitHandle"
                        }, "'", "    '", {
                            "Ref": "AWS::StackId"
                        }, "'", "    '", {
                            "Ref": "AWS::Region"
                        }, "'", "    & ", "\n", "    exit 0  ", "\n", "  fi ", "\n", "done", "\n\n", "--===============5189065377222898407==-- "]]
                    }
                },
                "KeyName": "DomainEventsKey",
                "InstanceType": {
                    "Ref": "InstanceType"
                }
            }
        },
        "AWSEBInstanceLaunchWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "AWSEBAutoScalingGroup",
            "Properties": {
                "Handle": {
                    "Ref": "AWSEBInstanceLaunchWaitHandle"
                },
                "Timeout": "600",
                "Count": 1
            }
        },
        "AWSEBAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Metadata": {
                "AWS::ElasticBeanstalk::Ext": {
                    "_EnvironmentInfoTaskMapping": "EnvironmentInfoTasks",
                    "_TriggersConfig": {
                        "applicationDeploy": {
                            "_Command": "CMD-AppDeploy",
                            "_WatchGroups": ["_TriggerAppDeployment"]
                        },
                        "configDeploy": {
                            "_Command": "CMD-ConfigDeploy",
                            "_WatchGroups": ["_TriggerConfigDeployment"]
                        },
                        "sqsdDeploy": {
                            "_Command": "CMD-SqsdDeploy",
                            "_WatchGroups": ["_TriggerSqsdDeployment"]
                        }
                    },
                    "_ParameterTriggers": {
                        "_TriggerAppDeployment": ["AppSource"],
                        "_TriggerSqsdDeployment": ["AWSEBWorkerQueueURL", "AWSEBHttpPath", "AWSEBMimeType", "AWSEBMaxRetries", "AWSEBHttpConnections", "AWSEBConnectTimeout", "AWSEBInactivityTimeout", "AWSEBVisibilityTimeout", "AWSEBRetentionPeriod", "AWSEBHealthCheck"],
                        "_TriggerConfigDeployment": ["LogPublicationControl", "InstancePort", "EnvironmentVariables", "DocumentRoot", "MemoryLimit", "ZlibOutputCompression", "AllowUrlFopen", "DisplayErrors", "MaxExecutionTime", "ComposerOptions"]
                    },
                    "_SqsDaemonConfigFileContent": {
                        "visibility_timeout": {
                            "Ref": "AWSEBVisibilityTimeout"
                        },
                        "sqs_verify_checksums": true,
                        "environment_name": {
                            "Ref": "AWSEBEnvironmentName"
                        },
                        "quiet": false,
                        "debug": false,
                        "connect_timeout": {
                            "Ref": "AWSEBConnectTimeout"
                        },
                        "inactivity_timeout": {
                            "Ref": "AWSEBInactivityTimeout"
                        },
                        "sqs_ssl": true,
                        "queue_url": {
                            "Ref": "AWSEBWorkerQueueURL"
                        },
                        "dynamodb_ssl": true,
                        "healthcheck": {
                            "Fn::Join": ["", ["TCP", ":", {
                                "Ref": "InstancePort"
                            }]]
                        },
                        "concurrent_sqs_polls": 8,
                        "retention_period": {
                            "Ref": "AWSEBRetentionPeriod"
                        },
                        "mime_type": {
                            "Ref": "AWSEBMimeType"
                        },
                        "threads": 50,
                        "verbose": false,
                        "http_connections": {
                            "Ref": "AWSEBHttpConnections"
                        },
                        "sqs_batch_delete": true,
                        "http_port": {
                            "Ref": "InstancePort"
                        },
                        "http_path": {
                            "Ref": "AWSEBHttpPath"
                        },
                        "keepalive": true,
                        "via_sns": false,
                        "max_retries": {
                            "Ref": "AWSEBMaxRetries"
                        }
                    },
                    "_ContainerConfigFileContent": {
                        "system": {
                            "LogPublicationControl": {
                                "Ref": "LogPublicationControl"
                            },
                            "AWSEBReferrerId": {
                                "Ref": "AWSEBReferrerId"
                            },
                            "AWSEBAgentId": {
                                "Ref": "AWSEBAgentId"
                            }
                        },
                        "php": {
                            "env": {
                                "Ref": "EnvironmentVariables"
                            }
                        },
                        "http_port": {
                            "Ref": "InstancePort"
                        },
                        "env": {
                            "PHP_MAX_EXECUTION_TIME": {
                                "Ref": "MaxExecutionTime"
                            },
                            "PHP_DISPLAY_ERRORS": {
                                "Ref": "DisplayErrors"
                            },
                            "PHP_DOCUMENT_ROOT": {
                                "Ref": "DocumentRoot"
                            },
                            "PHP_ALLOW_URL_FOPEN": {
                                "Ref": "AllowUrlFopen"
                            },
                            "PHP_MEMORY_LIMIT": {
                                "Ref": "MemoryLimit"
                            },
                            "PHP_ZLIB_OUTPUT_COMPRESSION": {
                                "Ref": "ZlibOutputCompression"
                            },
                            "PHP_COMPOSER_OPTIONS": {
                                "Ref": "ComposerOptions"
                            }
                        },
                        "document_root": {
                            "Ref": "DocumentRoot"
                        }
                    },
                    "_LaunchS3URL": "https:\/\/s3-us-west-2.amazonaws.com\/elasticbeanstalk-us-west-2-579340471839\/resources\/environments\/e-6mm36vtvqz\/eventConsumerEnv_LaunchFile",
                    "_API": {
                        "_Commands": {
                            "CMD-BundleLogs": {
                                "_Stages": {
                                    "01_enact": ["InfoTask-BundleLogs"]
                                }
                            },
                            "CMD-ConfigDeploy": {
                                "_Stages": {
                                    "02_enact": ["_Infra-SQSD-Stop", "Hook-EnactConfigDeploy", "Hook-PostConfigDeploy", "_Infra-SQSD-Start"],
                                    "01_pre": ["Infra-WriteRuntimeConfig", "Hook-PreConfigDeploy"]
                                },
                                "_RunStaged": "true"
                            },
                            "CMD-SystemTailLogs": {
                                "_Stages": {
                                    "01_enact": ["InfoTask-SystemTailLogs"]
                                }
                            },
                            "CMD-PatchInstance": {
                                "_Stages": {
                                    "01_enact": ["_Infra-PatchInstance"]
                                }
                            },
                            "CMD-TailLogs": {
                                "_Stages": {
                                    "01_enact": ["InfoTask-TailLogs"]
                                }
                            },
                            "CMD-Startup": {
                                "_Stages": {
                                    "02_enact": ["Hook-EnactAppDeploy", "Hook-PostAppDeploy", "Hook-PostInit", "Infra-WriteVersionOnStartup", "_Infra-SQSD-WriteConfig", "_Infra-SQSD-Start"],
                                    "01_pre": ["Infra-EmbeddedPreBuild", "Hook-PreAppDeploy", "Infra-EmbeddedPostBuild"]
                                },
                                "_RunStaged": "true"
                            },
                            "CMD-RestartAppServer": {
                                "_Stages": {
                                    "02_enact": ["_Infra-SQSD-Stop", "Hook-EnactRestartAppServer", "Hook-PostRestartAppServer", "_Infra-SQSD-Start"],
                                    "01_enact": ["Infra-WriteRuntimeConfig", "Hook-PreRestartAppServer"]
                                },
                                "_RunStaged": "false"
                            },
                            "CMD-SqsdDeploy": {
                                "_Stages": {
                                    "02_enact": ["_Infra-SQSD-WriteConfig", "_Infra-SQSD-Restart"]
                                },
                                "_RunStaged": "true"
                            },
                            "CMD-AppDeploy": {
                                "_Stages": {
                                    "02_enact": ["_Infra-SQSD-Stop", "Hook-EnactAppDeploy", "Hook-PostAppDeploy", "_Infra-SQSD-Start"],
                                    "01_pre": ["Infra-WriteRuntimeConfig", "Infra-WriteApplication1", "Infra-WriteApplication2", "Infra-EmbeddedPreBuild", "Hook-PreAppDeploy", "Infra-EmbeddedPostBuild"]
                                },
                                "_RunStaged": "true"
                            }
                        }
                    },
                    "AvailabilityZoneCount": "Any",
                    "_AppSourceUrlFileContent": {
                        "url": {
                            "Ref": "AppSource"
                        }
                    }
                },
                "AWS::CloudFormation::Init": {
                    "Infra-WriteApplication1": {
                        "commands": {
                            "01mkdir": {
                                "command": "rm -rf \/opt\/elasticbeanstalk\/deploy\/appsource\/; mkdir -p \/opt\/elasticbeanstalk\/deploy\/appsource\/"
                            }
                        }
                    },
                    "Infra-WriteBundleLogsConf": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/eb-system.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/eb-cfn-hup-call*", "\/var\/log\/eb-cfn-init-call*", "\/var\/log\/eb-cfn-init*", "\/var\/log\/eb-tools*", "\/var\/log\/eb-publish-logs*", ""]]
                                },
                                "mode": "000644"
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/cfn-system.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/cfn-hup*", "\/var\/log\/cfn-init*", ""]]
                                },
                                "mode": "000644"
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/eb-version-deployment.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/eb-version-deployment.log", ""]]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/cloud-init-system.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/cloud-init*", ""]]
                                },
                                "mode": "000644"
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/system.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/cron", "\/var\/log\/messages", "\/var\/log\/yum.log", ""]]
                                },
                                "mode": "000644"
                            }
                        }
                    },
                    "InstallAssets": {
                        "sources": {
                            "\/opt\/elasticbeanstalk": "https:\/\/elasticbeanstalk-env-resources-us-west-2.s3.amazonaws.com\/eb_php\/v2.1-3\/assets-php-5.5-64bit.tar.gz"
                        }
                    },
                    "AWSEBTools": {
                        "packages": {
                            "python": {
                                "requests": "0.13.5",
                                "tailer": "https:\/\/s3-us-west-2.amazonaws.com\/elasticbeanstalk-env-resources-us-west-2\/stalks\/eb_hooks_base_2.1-3\/lib\/tailer-0.3.tar.gz#md5=9d1fc073e48ca682786d50c077e823ce"
                            },
                            "rpm": {
                                "aws-elasticbeanstalk-tools": {
                                    "Fn::FindInMap": ["AWSEBOptions", "options", "ebrpm"]
                                }
                            }
                        }
                    },
                    "PHPLockRepoToGUID": {
                        "files": {
                            "\/etc\/yum\/vars\/guid": {
                                "content": "67c22a105235",
                                "mode": "000644"
                            }
                        },
                        "commands": {
                            "03yumRepoMetaClean": {
                                "command": "yum -y clean all"
                            },
                            "02yumRepos": {
                                "command": "sed -i -r 's\/mirror.list$\/mirror.list-\\$guid\/' \/etc\/yum.repos.d\/amzn-updates.repo"
                            },
                            "01cloudTemplates": {
                                "command": "sed -i -r 's\/mirror.list$\/mirror.list-\\\\$guid\/' \/etc\/cloud\/templates\/amzn-updates.repo.tmpl"
                            }
                        }
                    },
                    "Hook-PostConfigDeploy": {
                        "commands": {
                            "hooks": {
                                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/configdeploy\/post\/"
                            }
                        }
                    },
                    "Infra-WriteApplication2": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/bin\/download_source_bundle": {
                                "source": {
                                    "Fn::Select": [0, {
                                        "Fn::FindInMap": ["AWSEBOptions", "options", "downloadSourceBundleScriptLocation"]
                                    }]
                                },
                                "owner": "root",
                                "group": "root",
                                "mode": "000750"
                            }
                        },
                        "commands": {
                            "01downloadVersion": {
                                "command": "\/opt\/elasticbeanstalk\/bin\/download_source_bundle"
                            },
                            "02deleteVersionDownloadScriptFile": {
                                "command": "rm \/opt\/elasticbeanstalk\/bin\/download_source_bundle"
                            }
                        }
                    },
                    "Infra-SQSD-Restart": {
                        "commands": {
                            "01-restart-sqsd": {
                                "command": "\/etc\/init.d\/aws-sqsd restart"
                            }
                        }
                    },
                    "Hook-EnactAppDeploy": {
                        "commands": {
                            "hooks": {
                                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/appdeploy\/enact\/"
                            }
                        }
                    },
                    "Infra-WriteVersionOnStartup": {
                        "commands": {
                            "01writeversion": {
                                "command": "getMetadata.py --resource AWSEBBeanstalkMetadata --path AWS::ElasticBeanstalk::Metadata.Version > \/etc\/elasticbeanstalk\/.aws-eb-startup-version"
                            }
                        }
                    },
                    "Hook-PreAppDeploy": {
                        "commands": {
                            "hooks": {
                                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/appdeploy\/pre\/"
                            }
                        }
                    },
                    "configSets": {
                        "Infra-WriteApplication1": ["Infra-WriteApplication1"],
                        "_OnInstanceBoot": ["PHPLockRepoToGUID", "InstallAssets", "AWSEBTools", "AWSEBBaseConfig", "AWSEBCfnHup", "Infra-WriteLeaderTestScript", "Infra-WriteRuntimeConfig", "Infra-WriteApplication1", "Infra-WriteApplication2", "Infra-WriteTailLogsConf", "Infra-WriteSystemTailLogsConf", "Infra-WriteBundleLogsConf", "Infra-WritePublishLogsConf", "Infra-WritePublishLogsCron", {
                            "ConfigSet": "_Infra-SQSD-Install"
                        }],
                        "_Infra-PatchInstance": ["Infra-PatchInstance"],
                        "Infra-WriteBundleLogsConf": ["Infra-WriteBundleLogsConf"],
                        "Infra-EmbeddedPostBuild": [],
                        "Hook-PostConfigDeploy": ["Hook-PostConfigDeploy"],
                        "Infra-WriteApplication2": ["Infra-WriteApplication2"],
                        "_Infra-SQSD-Install": ["Infra-SQSD-Install"],
                        "_AppInstall": ["Hook-PreInit", "Hook-PreAppDeploy", "Hook-EnactAppDeploy", "Hook-PostAppDeploy", "Hook-PostInit", {
                            "ConfigSet": "_Infra-SQSD-WriteConfig"
                        }, {
                            "ConfigSet": "_Infra-SQSD-Start"
                        }],
                        "Hook-EnactAppDeploy": ["Hook-EnactAppDeploy"],
                        "Infra-EmbeddedPreBuild": [],
                        "Infra-WriteVersionOnStartup": ["Infra-WriteVersionOnStartup"],
                        "Hook-PreAppDeploy": ["Hook-PreAppDeploy"],
                        "Hook-PreRestartAppServer": ["Hook-PreRestartAppServer"],
                        "Hook-EnactRestartAppServer": ["Hook-EnactRestartAppServer"],
                        "Infra-WriteSystemTailLogsConf": ["Infra-WriteSystemTailLogsConf"],
                        "Infra-WriteRuntimeConfig": ["Infra-WriteRuntimeConfig"],
                        "Hook-PostRestartAppServer": ["Hook-PostRestartAppServer"],
                        "Hook-PreInit": ["Hook-PreInit"],
                        "Infra-WritePublishLogsCron": ["Infra-WritePublishLogsCron"],
                        "_Infra-SQSD-Restart": ["Infra-SQSD-Restart"],
                        "InfoTask-TailLogs": ["InfoTask-TailLogs"],
                        "_OnInstanceReboot": ["AWSEBTools", "AWSEBBaseConfig", "AWSEBCfnHup", "Infra-WriteRuntimeConfig", "Infra-WriteApplication1", "Infra-WriteApplication2"],
                        "_Infra-SQSD-Stop": ["Infra-SQSD-Stop"],
                        "_Infra-SQSD-WriteConfig": ["Infra-SQSD-WriteConfig"],
                        "Hook-EnactConfigDeploy": ["Hook-EnactConfigDeploy"],
                        "Hook-PreConfigDeploy": ["Hook-PreConfigDeploy"],
                        "InfoTask-BundleLogs": ["InfoTask-BundleLogs"],
                        "Hook-PostInit": ["Hook-PostInit"],
                        "Hook-PostAppDeploy": ["Hook-PostAppDeploy"],
                        "InfoTask-SystemTailLogs": ["InfoTask-SystemTailLogs"],
                        "Infra-WriteTailLogsConf": ["Infra-WriteTailLogsConf"],
                        "Infra-WritePublishLogsConf": ["Infra-WritePublishLogsConf"],
                        "_AppInstallReboot": ["Hook-PreAppDeploy"],
                        "_Infra-SQSD-Start": ["Infra-SQSD-Start"]
                    },
                    "Infra-WriteLeaderTestScript": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/bin\/leader-test.sh": {
                                "content": {
                                    "Fn::Join": ["", ["#!\/bin\/bash", "\n", "if [[ \"$EB_IS_COMMAND_LEADER\" == \"true\" ]]; then ", "\n", "  exit 0 ", "\n", "else  ", "\n", "  exit 1 ", "\n", "fi ", "\n"]]
                                },
                                "mode": "000755"
                            }
                        }
                    },
                    "Hook-PreRestartAppServer": {
                        "commands": {
                            "hooks": {
                                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/restartappserver\/pre\/"
                            }
                        }
                    },
                    "Infra-SQSD-Start": {
                        "commands": {
                            "01-start-sqsd": {
                                "command": "\/etc\/init.d\/aws-sqsd start"
                            }
                        }
                    },
                    "Hook-EnactRestartAppServer": {
                        "commands": {
                            "hooks": {
                                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/restartappserver\/enact\/"
                            }
                        }
                    },
                    "Infra-WriteSystemTailLogsConf": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/eb-version-deployment.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/eb-version-deployment.log", ""]]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/eb-system.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/eb-cfn-hup-call.log", "\/var\/log\/eb-cfn-init-call.log", "\/var\/log\/eb-cfn-init.log", "\/var\/log\/eb-tools.log", "\/var\/log\/eb-publish-logs.log", ""]]
                                },
                                "mode": "000644"
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/system.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/cron", "\/var\/log\/messages", "\/var\/log\/yum.log", ""]]
                                },
                                "mode": "000644"
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/cloud-init-system.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/cloud-init.log", ""]]
                                },
                                "mode": "000644"
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/cfn-system.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/cfn-hup.log", "\/var\/log\/cfn-init.log", ""]]
                                },
                                "mode": "000644"
                            }
                        }
                    },
                    "Hook-PostRestartAppServer": {
                        "commands": {
                            "hooks": {
                                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/restartappserver\/post\/"
                            }
                        }
                    },
                    "Infra-WriteRuntimeConfig": {
                        "commands": {
                            "02writeappsource": {
                                "command": {
                                    "Fn::Join": ["", ["getMetadata.py --path AWS::ElasticBeanstalk::Ext._AppSourceUrlFileContent > \/opt\/elasticbeanstalk\/deploy\/configuration\/appsourceurl"]]
                                }
                            },
                            "03writeconfig": {
                                "command": {
                                    "Fn::Join": ["", ["getMetadata.py --path AWS::ElasticBeanstalk::Ext._ContainerConfigFileContent > \/opt\/elasticbeanstalk\/deploy\/configuration\/containerconfiguration"]]
                                }
                            },
                            "01mkdir": {
                                "command": "rm -rf \/opt\/elasticbeanstalk\/deploy\/configuration; mkdir -p \/opt\/elasticbeanstalk\/deploy\/configuration"
                            },
                            "04setperms": {
                                "command": "\/bin\/chmod og-rwx \/opt\/elasticbeanstalk\/deploy\/configuration\/containerconfiguration"
                            }
                        }
                    },
                    "Hook-PreInit": {
                        "commands": {
                            "hooks": {
                                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/preinit\/"
                            }
                        }
                    },
                    "Infra-PatchInstance": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/bin\/patch_instance": {
                                "source": {
                                    "Fn::Select": [0, {
                                        "Fn::FindInMap": ["AWSEBOptions", "options", "ebpatchscripturl"]
                                    }]
                                },
                                "owner": "root",
                                "group": "root",
                                "mode": "000750"
                            }
                        },
                        "commands": {
                            "01executepatch": {
                                "command": "\/opt\/elasticbeanstalk\/bin\/patch_instance"
                            }
                        }
                    },
                    "Infra-WritePublishLogsCron": {
                        "files": {
                            "\/etc\/cron.d\/publishlogs": {
                                "content": {
                                    "Fn::Join": ["", ["SHELL=\/bin\/bash", "\n", "PATH=\/sbin:\/bin:\/usr\/sbin:\/usr\/bin", "\n", "MAILTO=root", "\n", "HOME=\/", "\n", "10,30,50 * * * * root ", "publishLogs.py --de-dupe --conf-path '\/opt\/elasticbeanstalk\/tasks\/publishlogs.d\/*' --location-prefix ", {
                                        "Fn::FindInMap": ["EnvironmentInfoTasks", "publish", "LocationPrefix"]
                                    }, " --num-concurrent 2", "\n", "05,25,45 * * * * root ", "clearStaleLogPublishingRecords.py", "\n"]]
                                },
                                "mode": "000644"
                            }
                        }
                    },
                    "Infra-SQSD-Stop": {
                        "commands": {
                            "01-stop-sqsd": {
                                "command": "\/etc\/init.d\/aws-sqsd stop"
                            }
                        }
                    },
                    "AWSEBBaseConfig": {
                        "files": {
                            "\/etc\/elasticbeanstalk\/.aws-eb-stack.properties": {
                                "content": {
                                    "Fn::Join": ["", ["environment_id=", {
                                        "Ref": "AWSEBEnvironmentId"
                                    }, "\n", "environment_bucket=", {
                                        "Ref": "AWSEBEnvironmentBucket"
                                    }, "\n", "stack_name=", {
                                        "Ref": "AWS::StackId"
                                    }, "\n", "resource=", "AWSEBAutoScalingGroup", "\n", "region=", {
                                        "Ref": "AWS::Region"
                                    }, "\n\n"]]
                                },
                                "owner": "root",
                                "group": "root",
                                "mode": "000440"
                            },
                            "\/etc\/cfn\/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": ["", ["[main]", "\n", "stack=", {
                                        "Ref": "AWS::StackId"
                                    }, "\n", "region=", {
                                        "Ref": "AWS::Region"
                                    }, "\n"]]
                                },
                                "owner": "root",
                                "group": "root",
                                "mode": "000400"
                            },
                            "\/etc\/cfn\/hooks.d\/aws-eb-command-handler.conf": {
                                "content": {
                                    "Fn::Join": ["", ["[aws-eb-command-handler]", "\n", "triggers=on.command", "\n", "path=ElasticBeanstalkCommand-", "AWSEBAutoScalingGroup", "\n", "action=commandWrapper.py", "\n"]]
                                }
                            }
                        },
                        "commands": {
                            "clearbackupfiles": {
                                "command": "rm -f \/etc\/cfn\/hooks.d\/*.bak"
                            }
                        }
                    },
                    "InfoTask-TailLogs": {
                        "commands": {
                            "taillogs": {
                                "command": {
                                    "Fn::Join": ["", ["tailLogs.py --concatenate --conf-path '\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/*' --location-prefix ", {
                                        "Fn::FindInMap": ["EnvironmentInfoTasks", "tail", "LocationPrefix"]
                                    }]]
                                }
                            }
                        }
                    },
                    "Hook-EnactConfigDeploy": {
                        "commands": {
                            "hooks": {
                                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/configdeploy\/enact\/"
                            }
                        }
                    },
                    "Hook-PreConfigDeploy": {
                        "commands": {
                            "hooks": {
                                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/configdeploy\/pre\/"
                            }
                        }
                    },
                    "Infra-SQSD-Install": {
                        "files": {
                            "\/etc\/logrotate.d\/aws-sqsd": {
                                "content": "\/var\/log\/aws-sqsd\/*.log {\n    daily\n    rotate 10\n    missingok\n    compress\n    copytruncate\n}\n",
                                "owner": "root",
                                "group": "root",
                                "mode": "000644"
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/publishlogs.d\/aws-sqsd.conf": {
                                "content": "\/var\/log\/aws-sqsd\/*.gz\n",
                                "owner": "root",
                                "group": "root",
                                "mode": "000644"
                            },
                            "\/opt\/elasticbeanstalk\/bin\/aws-sqsd-dependencies.sh": {
                                "content": "#!\/bin\/bash\n#\nRUBY_ROOT=\"\/opt\/elasticbeanstalk\/lib\/sqsd\/ruby\"\nBUCKET=\"elasticbeanstalk-env-resources-us-west-2\"\n\nif [ -d \"${RUBY_ROOT}\" ]\nthen\n    exit 0\nfi\n\nARCHITECTURE=`uname -m`\nif [ \"${ARCHITECTURE}\" == \"i686\" ]\nthen\n    ARCHITECTURE=\"i386\"\nfi\nKEY=\"eb_sqsd\/aws-sqsd-ruby-${ARCHITECTURE}-2013-11-25.tar.gz\"\n\ncurl \"http:\/\/${BUCKET}.s3.amazonaws.com\/${KEY}\" > \/tmp\/aws-sqsd-ruby.tar.gz\ntar zxf \/tmp\/aws-sqsd-ruby.tar.gz -C \/\nrm -f \/tmp\/aws-sqsd-ruby.tar.gz\n",
                                "owner": "root",
                                "group": "root",
                                "mode": "000755"
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/aws-sqsd.conf": {
                                "content": "\/var\/log\/aws-sqsd\/*\n",
                                "owner": "root",
                                "group": "root",
                                "mode": "000644"
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/aws-sqsd.conf": {
                                "content": "\/var\/log\/aws-sqsd\/*.log\n",
                                "owner": "root",
                                "group": "root",
                                "mode": "000644"
                            },
                            "\/etc\/cron.d\/aws-sqsd-monitor": {
                                "content": "* * * * *\/15 root \/opt\/elasticbeanstalk\/bin\/aws-sqsd-monitor\n",
                                "owner": "root",
                                "group": "root",
                                "mode": "000644"
                            },
                            "\/opt\/elasticbeanstalk\/bin\/aws-sqsd-monitor": {
                                "content": "#!\/bin\/sh\n\nif [ -f \"\/var\/run\/aws-sqsd\/default.pid\" ] && ! \/etc\/init.d\/aws-sqsd status >\/dev\/null 2>&1; then\n\tlogger -t aws-sqsd-monitor \"restarting aws-sqsd...\"\n\t\/etc\/init.d\/aws-sqsd restart\nfi\n",
                                "owner": "root",
                                "group": "root",
                                "mode": "000755"
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/aws-sqsd.conf": {
                                "content": "\/var\/log\/aws-sqsd\/*.log\n",
                                "owner": "root",
                                "group": "root",
                                "mode": "000644"
                            },
                            "\/etc\/init.d\/aws-sqsd": {
                                "content": "#!\/bin\/bash\n#\n# chkconfig: - 65 45\n. \/etc\/init.d\/functions\n\nRUBY_PROFILE=\"\/opt\/elasticbeanstalk\/lib\/sqsd\/ruby\/profile.sh\" \n\naws-sqsd() {\n    su sqsd sh -c \"source ${RUBY_PROFILE} && \/opt\/elasticbeanstalk\/lib\/sqsd\/ruby\/bin\/aws-sqsd ${1}\"\n}\n\nUSER=`id -nu`\nif [ \"${USER}\" != \"root\" ]\nthen\n    echo \"aws-sqsd: permission denied\"\n    exit 1\nfi\n\ncase \"$1\" in\nstart)\n     aws-sqsd start\n     RETVAL=$?\n     ;;\nstop)\n    aws-sqsd stop\n    RETVAL=$?\n    ;;\nstatus)\n    aws-sqsd status\n    RETVAL=$?\n    ;;\nrestart|reload|condrestart)\n    aws-sqsd stop\n    aws-sqsd start\n    RETVAL=$?\n    ;;\n*)\n    echo \"Usage: $0 [start|stop|restart|reload|status]\"\n    RETVAL=2\nesac\nexit $RETVAL\n",
                                "owner": "root",
                                "group": "root",
                                "mode": "000755"
                            },
                            "\/opt\/elasticbeanstalk\/bin\/aws-sqsd-install.rb": {
                                "content": "#!\/usr\/bin\/env ruby\n\nrequire 'aws-sdk'\nrequire 'fileutils'\nrequire 'open-uri'\n\nBUCKET = 'elasticbeanstalk-env-resources-us-west-2'\nGEM_NAME = 'aws-sqsd-1.0.gem'\nGEM_KEY = \"eb_sqsd\/#{GEM_NAME}\"\nGEM_PATH = \"\/var\/tmp\/#{GEM_NAME}\"\nUSER = \"sqsd\"\n\n# download the gem\nuri = %[http:\/\/#{BUCKET}.s3.amazonaws.com\/#{GEM_KEY}]\nopen(uri) do |s|\n    open(GEM_PATH, \"w\") do |f|\n        while buf = s.read(32768)\n            f.write buf\n        end\n    end\nend\n\n# install the gem\nsystem %[gem install --local --bindir \/opt\/elasticbeanstalk\/lib\/sqsd\/ruby\/bin #{GEM_PATH} 2>&1]\nunless $?.exitstatus == 0\n    puts %[installing gem \"#{GEM_PATH}\" failed]\n    exit 1\nend\nFileUtils.rm_f GEM_PATH\n\n# create the daemon user\nunless File.read('\/etc\/passwd')[\/^#{USER}:\/]\n    system %[\/usr\/sbin\/useradd --no-create-home --comment \"AWS SQSD Daemon\" #{USER}]\n    unless $?.exitstatus == 0\n        puts %[creating the user \"#{USER}\" failed]\n        exit 1\n    end\nend\n\n# create log pid and configuration directories\n%w[\/var\/log\/aws-sqsd \/var\/run\/aws-sqsd \/etc\/aws-sqsd.d].each do |path|\n    FileUtils.mkdir_p path\n    FileUtils.chown USER, USER, path\nend\n",
                                "owner": "root",
                                "group": "root",
                                "mode": "000755"
                            }
                        },
                        "commands": {
                            "03-install-dependencies": {
                                "command": "umask 0022 && \/opt\/elasticbeanstalk\/bin\/aws-sqsd-dependencies.sh"
                            },
                            "04-install-aws-sqsd": {
                                "command": "source \/opt\/elasticbeanstalk\/lib\/sqsd\/ruby\/profile.sh && umask 0022 && \/opt\/elasticbeanstalk\/bin\/aws-sqsd-install.rb"
                            },
                            "01-cron.d-clean": {
                                "command": "rm -rf \/etc\/cron.d\/aws-sqsd-monitor.bak"
                            },
                            "02-sqsd-config-clean": {
                                "command": "rm -rf \/etc\/aws-sqsd.d\/*.bak"
                            }
                        }
                    },
                    "InfoTask-BundleLogs": {
                        "commands": {
                            "bundlelogs": {
                                "command": {
                                    "Fn::Join": ["", ["bundleLogs.py --conf-path '\/opt\/elasticbeanstalk\/tasks\/bundlelogs.d\/*' --location-prefix ", {
                                        "Fn::FindInMap": ["EnvironmentInfoTasks", "bundle", "LocationPrefix"]
                                    }]]
                                }
                            }
                        }
                    },
                    "Infra-SQSD-WriteConfig": {
                        "commands": {
                            "01-write-sqsd-config": {
                                "command": "getMetadata.py --yaml --path AWS::ElasticBeanstalk::Ext._SqsDaemonConfigFileContent | sed \"s\/'\/\/g\" > \/etc\/aws-sqsd.d\/default.yaml"
                            }
                        }
                    },
                    "Infra-SQSD-EnsureRunning": {
                        "services": {
                            "sysvinit": {
                                "aws-sqsd": {
                                    "ensureRunning": true,
                                    "enabled": true,
                                    "sources": ["\/etc\/aws-sqsd.d"]
                                }
                            }
                        }
                    },
                    "Hook-PostInit": {
                        "commands": {
                            "hooks": {
                                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/postinit\/"
                            }
                        }
                    },
                    "Hook-PostAppDeploy": {
                        "commands": {
                            "hooks": {
                                "command": "directoryHooksExecutor.py --path \/opt\/elasticbeanstalk\/hooks\/appdeploy\/post\/"
                            }
                        }
                    },
                    "InfoTask-SystemTailLogs": {
                        "commands": {
                            "systemtaillogs": {
                                "command": {
                                    "Fn::Join": ["", ["tailLogs.py --conf-path '\/opt\/elasticbeanstalk\/tasks\/systemtaillogs.d\/*' --location-prefix ", {
                                        "Fn::FindInMap": ["EnvironmentInfoTasks", "systemtail", "LocationPrefix"]
                                    }]]
                                }
                            }
                        }
                    },
                    "Infra-WriteTailLogsConf": {
                        "files": {
                            "\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/cfn-system.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/cfn-hup.log", "\/var\/log\/cfn-init.log", ""]]
                                },
                                "mode": "000644"
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/eb-version-deployment.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/eb-version-deployment.log", ""]]
                                }
                            },
                            "\/opt\/elasticbeanstalk\/tasks\/taillogs.d\/eb-system.conf": {
                                "content": {
                                    "Fn::Join": ["\n", ["\/var\/log\/eb-cfn-hup-call.log", "\/var\/log\/eb-cfn-init-call.log", "\/var\/log\/eb-cfn-init.log", "\/var\/log\/eb-tools.log", "\/var\/log\/eb-publish-logs.log", ""]]
                                },
                                "mode": "000644"
                            }
                        }
                    },
                    "Infra-WritePublishLogsConf": {
                        "files": {}
                    },
                    "AWSEBCfnHup": {
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "ensureRunning": "true"
                                }
                            }
                        }
                    }
                },
                "ForcingMetadataUpdate": "Changing something in the metadata will force re-compuation"
            },
            "DependsOn": "AWSEBBeanstalkMetadata",
            "Properties": {
                "Tags": [
                    {
                        "PropagateAtLaunch": true,
                        "Value": {
                            "Ref": "AWSEBEnvironmentName"
                        },
                        "Key": "elasticbeanstalk:environment-name"
                    },
                    {
                        "PropagateAtLaunch": true,
                        "Value": {
                            "Ref": "AWSEBEnvironmentName"
                        },
                        "Key": "Name"
                    },
                    {
                        "PropagateAtLaunch": true,
                        "Value": {
                            "Ref": "AWSEBEnvironmentId"
                        },
                        "Key": "elasticbeanstalk:environment-id"
                    }
                ],
                "AvailabilityZones": ["us-west-2b", "us-west-2c", "us-west-2a"],
                "MaxSize": 1,
                "Cooldown": "360",
                "LaunchConfigurationName": {
                    "Ref": "AWSEBAutoScalingLaunchConfiguration"
                },
                "MinSize": 1
            }
        },
        "AWSEBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SecurityGroup for ElasticBeanstalk environment."
            }
        },
        "AWSEBInstanceLaunchWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "AWSEBSecurityGroupSSHIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "IpProtocol": "tcp",
                "GroupName": {
                    "Ref": "AWSEBSecurityGroup"
                },
                "ToPort": "22",
                "FromPort": "22",
                "CidrIp": "0.0.0.0\/0"
            }
        },
        "AWSEBBeanstalkMetadata": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Metadata": {
                "AWS::ElasticBeanstalk::Metadata": {
                    "Name": "e-6mm36vtvqz",
                    "EnvironmentName": "eventConsumerEnv",
                    "Description": "TemplatePack for environment: eventConsumerEnv",
                    "DateCreated": "2014-02-07T13:35:24",
                    "DateUpdated": "2014-02-07T13:35:24",
                    "EnvironmentId": "e-6mm36vtvqz",
                    "Version": "b2687f87-8ffc-11e3-9919-e7b114d8c0a6"
                }
            }
        }
    }}